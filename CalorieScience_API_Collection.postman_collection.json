{
	"info": {
		"_postman_id": "caloriesci-api-v4",
		"name": "CalorieScience API - Complete Collection v4 (Location-Based Guidelines)",
		"description": "Complete API collection for CalorieScience nutrition platform with automatic EER guideline detection based on client location, enhanced calculations (BMI/BMR/classification), and comprehensive testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "caloriesci-v4"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register Nutritionist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_email', response.user.email);",
									"    console.log('‚úÖ Registration successful, token saved');",
									"} else {",
									"    console.log('‚ùå Registration failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"register\",\n  \"email\": \"dr.sarah.wilson@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"Sarah\",\n  \"lastName\": \"Wilson\",\n  \"phone\": \"5551234567\",\n  \"phoneCountryCode\": \"+1\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth"
							]
						}
					}
				},
				{
					"name": "Login Nutritionist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('auth_token', response.token);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_email', response.user.email);",
									"    console.log('‚úÖ Login successful, token saved');",
									"} else {",
									"    console.log('‚ùå Login failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"login\",\n  \"email\": \"test.login@example.com\",\n  \"password\": \"TestPass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth"
							]
						}
					}
				}
			]
		},
		{
			"name": "EER & Macros Calculations",
			"item": [
				{
					"name": "Calculate EER (Auto Guidelines from Location)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('calculated_eer', response.eer);",
									"    pm.environment.set('calculated_bmr', response.bmr);",
									"    pm.environment.set('calculated_bmi', response.bmi);",
									"    pm.environment.set('calculated_bmi_category', response.bmiCategory);",
									"    pm.environment.set('calculated_bmi_classification', response.bmiClassification);",
									"    pm.environment.set('detected_eer_guideline', response.eerGuideline);",
									"    console.log('‚úÖ EER calculated successfully');",
									"    console.log('üìç Location:', response.input.location);",
									"    console.log('üåç Auto-detected Guideline:', response.eerGuideline);",
									"    console.log('üìä EER:', response.eer, 'kcal');",
									"    console.log('üî• BMR:', response.bmr, 'kcal');",
									"    console.log('‚öñÔ∏è BMI:', response.bmi, '(' + response.bmiClassification + ')');",
									"    console.log('üßÆ Formula:', response.formulaUsed);",
									"} else {",
									"    console.log('‚ùå EER calculation failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"calculateEer\",\n  \"location\": \"Paris, France\",\n  \"age\": 28,\n  \"gender\": \"female\",\n  \"heightCm\": 165,\n  \"weightKg\": 60,\n  \"activityLevel\": \"moderately_active\",\n  \"pregnancyStatus\": \"not_pregnant\",\n  \"lactationStatus\": \"not_lactating\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/calculations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"calculations"
							]
						}
					}
				},
				{
					"name": "Calculate EER (Pregnant + India Location)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    console.log('‚úÖ Pregnancy EER calculated successfully');",
									"    console.log('üìç Location:', response.input.location);",
									"    console.log('üåç Auto-detected Guideline:', response.eerGuideline);",
									"    console.log('ü§∞ Pregnancy Adjustment included in formula');",
									"    console.log('üìä EER:', response.eer, 'kcal');",
									"    console.log('üî• BMR:', response.bmr, 'kcal');",
									"    console.log('‚öñÔ∏è BMI:', response.bmi, '(' + response.bmiClassification + ')');",
									"    console.log('üßÆ Formula:', response.formulaUsed);",
									"} else {",
									"    console.log('‚ùå Pregnancy EER calculation failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"calculateEer\",\n  \"location\": \"Mumbai, India\",\n  \"age\": 25,\n  \"gender\": \"female\",\n  \"heightCm\": 160,\n  \"weightKg\": 55,\n  \"activityLevel\": \"lightly_active\",\n  \"pregnancyStatus\": \"second_trimester\",\n  \"lactationStatus\": \"not_lactating\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/calculations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"calculations"
							]
						}
					}
				},
				{
					"name": "Calculate Macros (Auto Guidelines from Location)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('calculated_macros', JSON.stringify(response.macros));",
									"    console.log('‚úÖ Macros calculated successfully');",
									"    console.log('üìç Location:', response.input.location);",
									"    console.log('üåç Auto-detected Guideline:', response.macroGuideline);",
									"    const macros = response.macros;",
									"    console.log('ü•© Protein:', macros.Protein.min_grams + '-' + macros.Protein.max_grams + 'g');",
									"    console.log('üçû Carbs:', macros.Carbohydrates.min_grams + '-' + macros.Carbohydrates.max_grams + 'g');",
									"    console.log('ü•ë Fat:', macros['Total Fat'].min_grams + '-' + macros['Total Fat'].max_grams + 'g');",
									"} else {",
									"    console.log('‚ùå Macros calculation failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"calculateMacros\",\n  \"eer\": {{calculated_eer}},\n  \"location\": \"Paris, France\",\n  \"age\": 28,\n  \"gender\": \"female\",\n  \"weightKg\": 60\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/calculations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"calculations"
							]
						}
					}
				}
			]
		},
		{
			"name": "Client Management",
			"item": [
				{
					"name": "Create Client (Basic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('client_id', response.client.id);",
									"    console.log('‚úÖ Basic client created successfully');",
									"    console.log('üÜî Client ID:', response.client.id);",
									"} else {",
									"    console.log('‚ùå Client creation failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"dateOfBirth\": \"1990-05-15\",\n  \"gender\": \"male\",\n  \"heightCm\": 180,\n  \"weightKg\": 75,\n  \"activityLevel\": \"moderately_active\",\n  \"location\": \"New York, NY\",\n  \"healthGoals\": [\"weight_management\"],\n  \"status\": \"prospective\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/clients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients"
							]
						}
					}
				},
				{
					"name": "Create Client (With EER Data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('enhanced_client_id', response.client.id);",
									"    console.log('‚úÖ Enhanced client created successfully');",
									"    console.log('üÜî Client ID:', response.client.id);",
									"    console.log('‚öñÔ∏è BMI:', response.client.bmi, '(' + response.client.bmiCategory + ')');",
									"    console.log('üî• BMR:', response.client.bmr, 'kcal');",
									"    console.log('üìç Location:', response.client.location);",
									"    console.log('üìã EER Guideline:', response.client.eerGuideline);",
									"} else {",
									"    console.log('‚ùå Enhanced client creation failed:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Marie\",\n  \"lastName\": \"Dubois\",\n  \"email\": \"marie.dubois@example.com\",\n  \"dateOfBirth\": \"1995-03-15\",\n  \"gender\": \"female\",\n  \"heightCm\": 165,\n  \"weightKg\": 60,\n  \"activityLevel\": \"moderately_active\",\n  \"location\": \"Paris, France\",\n  \"bmi\": {{calculated_bmi}},\n  \"bmiCategory\": \"{{calculated_bmi_category}}\",\n  \"bmr\": {{calculated_bmr}},\n  \"eerCalories\": {{calculated_eer}},\n  \"healthGoals\": [\"weight_management\"],\n  \"status\": \"prospective\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/clients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients"
							]
						}
					}
				},
				{
					"name": "Create Client (Comprehensive Edge Case)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Priya\",\n  \"lastName\": \"Sharma\",\n  \"email\": \"priya.sharma@example.com\",\n  \"dateOfBirth\": \"1992-08-20\",\n  \"gender\": \"female\",\n  \"heightCm\": 158,\n  \"weightKg\": 52,\n  \"activityLevel\": \"lightly_active\",\n  \"location\": \"Mumbai, India\",\n  \"pregnancyStatus\": \"second_trimester\",\n  \"lactationStatus\": \"not_lactating\",\n  \"medicalConditions\": [\"gestational_diabetes\"],\n  \"healthGoals\": [\"healthy_pregnancy\", \"weight_management\"],\n  \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/clients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients"
							]
						}
					}
				},
				{
					"name": "Get All Clients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/clients?status=all&page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients"
							],
							"query": [
								{
									"key": "status",
									"value": "all"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Get Client (Enhanced)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const client = pm.response.json().client;",
									"    console.log('‚úÖ Client retrieved successfully');",
									"    console.log('üë§ Client:', client.fullName);",
									"    console.log('‚öñÔ∏è BMI:', client.bmi, '(' + client.bmiCategory + ')');",
									"    console.log('üî• BMR:', client.bmr, 'kcal');",
									"    console.log('‚ö° EER:', client.eerCalories, 'kcal');",
									"    console.log('üìç Location:', client.location);",
									"    console.log('üìã EER Guideline:', client.eerGuideline);",
									"    if (client.proteinGrams) {",
									"        console.log('ü•© Protein Target:', client.proteinGrams + 'g');",
									"        console.log('üçû Carbs Target:', client.carbsGrams + 'g');",
									"        console.log('ü•ë Fat Target:', client.fatGrams + 'g');",
									"    }",
									"} else {",
									"    console.log('‚ùå Failed to get client:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/clients/{{enhanced_client_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients",
								"{{enhanced_client_id}}"
							]
						}
					}
				},
				{
					"name": "Update Client with Macros",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const client = pm.response.json().client;",
									"    console.log('‚úÖ Client updated with macros successfully');",
									"    console.log('ü•© Protein:', client.proteinGrams + 'g (' + client.proteinPercentage + '%)');",
									"    console.log('üçû Carbs:', client.carbsGrams + 'g (' + client.carbsPercentage + '%)');",
									"    console.log('ü•ë Fat:', client.fatGrams + 'g (' + client.fatPercentage + '%)');",
									"    console.log('üåæ Fiber:', client.fiberGrams + 'g');",
									"} else {",
									"    console.log('‚ùå Failed to update client with macros:', pm.response.json());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"macrosData\": {{calculated_macros}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/clients/{{enhanced_client_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"clients",
								"{{enhanced_client_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "Complete Workflow Tests",
			"item": [
				{
					"name": "üîÑ Complete EER + Client + Macros Workflow",
					"item": [
						{
							"name": "Step 1: Calculate EER for New Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set('workflow_eer', response.eer);",
											"pm.environment.set('workflow_bmr', response.bmr);",
											"pm.environment.set('workflow_bmi', response.bmi);",
											"pm.environment.set('workflow_bmi_category', response.bmiCategory);",
											"console.log('üî• Step 1: EER calculated -', response.eer, 'kcal');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"calculateEer\",\n  \"location\": \"Barcelona, Spain\",\n  \"age\": 30,\n  \"gender\": \"female\",\n  \"heightCm\": 170,\n  \"weightKg\": 65,\n  \"activityLevel\": \"very_active\",\n  \"pregnancyStatus\": \"not_pregnant\",\n  \"lactationStatus\": \"not_lactating\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/calculations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"calculations"
									]
								}
							}
						},
						{
							"name": "Step 2: Create Client with EER Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set('workflow_client_id', response.client.id);",
											"console.log('üë§ Step 2: Client created -', response.client.fullName);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Elena\",\n  \"lastName\": \"Rodriguez\",\n  \"email\": \"elena.rodriguez@example.com\",\n  \"dateOfBirth\": \"1993-12-10\",\n  \"gender\": \"female\",\n  \"heightCm\": 170,\n  \"weightKg\": 65,\n  \"activityLevel\": \"very_active\",\n  \"location\": \"Barcelona, Spain\",\n  \"bmi\": {{workflow_bmi}},\n  \"bmiCategory\": \"{{workflow_bmi_category}}\",\n  \"bmr\": {{workflow_bmr}},\n  \"eerCalories\": {{workflow_eer}},\n  \"healthGoals\": [\"muscle_gain\", \"athletic_performance\"],\n  \"status\": \"active\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/clients",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"clients"
									]
								}
							}
						},
						{
							"name": "Step 3: Calculate Macros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set('workflow_macros', JSON.stringify(response));",
											"console.log('ü•ó Step 3: Macros calculated');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"calculateMacros\",\n  \"eer\": {{workflow_eer}},\n  \"location\": \"Barcelona, Spain\",\n  \"age\": 30,\n  \"gender\": \"female\",\n  \"weightKg\": 65\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/calculations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"calculations"
									]
								}
							}
						},
						{
							"name": "Step 4: Update Client with Macros",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log('‚úÖ Step 4: Client updated with complete nutrition data');",
											"console.log('üéâ Workflow completed successfully!');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{workflow_macros}}"
								},
								"url": {
									"raw": "{{base_url}}/api/clients/{{workflow_client_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"clients",
										"{{workflow_client_id}}"
									]
								}
							}
						},
						{
							"name": "Step 5: Verify Final Client Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const client = pm.response.json().client;",
											"console.log('üèÅ FINAL VERIFICATION:');",
											"console.log('üë§ Client:', client.fullName);",
											"console.log('üìç Location:', client.location, '| EER Guideline:', client.eerGuideline);",
											"console.log('‚öñÔ∏è BMI:', client.bmi, '(' + client.bmiClassification + ')');",
											"console.log('üî• BMR:', client.bmr, 'kcal | ‚ö° EER:', client.eerCalories, 'kcal');",
											"console.log('ü•© Protein:', client.proteinGrams + 'g (' + client.proteinPercentage + '%)');",
											"console.log('üçû Carbs:', client.carbsGrams + 'g (' + client.carbsPercentage + '%)');",
											"console.log('ü•ë Fat:', client.fatGrams + 'g (' + client.fatPercentage + '%)');",
											"console.log('üåæ Fiber:', client.fiberGrams + 'g');",
											"console.log('‚úÖ ALL FEATURES WORKING PERFECTLY!');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/clients/{{workflow_client_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"clients",
										"{{workflow_client_id}}"
									]
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "System Health & Migration",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					}
				},
				{
					"name": "Run Database Migrations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"migrate\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					}
				},
				{
					"name": "Validate Migrations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"validate\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'https://caloriescience-api.vercel.app');",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://caloriescience-api.vercel.app",
			"type": "string"
		}
	]
} 